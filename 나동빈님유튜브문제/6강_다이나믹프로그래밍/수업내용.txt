다이나믹 프로그래밍
: 메모리를 적절히 사용하여 수행 시간 효율성을 비약적으로 향상시키는 방법
이미 계산된 결과(작은 문제)는 별도의 메모리 영역에 저장하여 다시 계산하지 않도록
일반적으로 두 가지 방식(탑다운과 보텀업)으로 구성됨

자료 구조에서 동적 할당(Dynamic Allocation)은 '프로그램이 실행되는 도중에 실행에 필요한 메모리를 할당하는 기법'
반면에 다이나믹 프로그래밍에서 '다이나믹'은 별다른 의미 없이 사용된 단어

다이나믹 프로그래밍은 문제가 다음의 조건을 만족할 때 사용가능
1. 최적 부분 구조(Optimal Substructure)
    : 큰 문제를 작은 문제로 나눌 수 있으며 작은 문제의 답을 모아서 큰 문제를 해결할 수 있음
2. 중복되는 부분 문제(Overlapping Subproblem)
    : 동일한 작은 문제를 반복적으로 해결해야함

예시)
피보나치 수열
    점화식으로 표현 >> 재귀함수 사용 => 지수 시간 복잡도 (O(2**N))
    다이나믹 프로그래밍 ==> O(N)
     메모제이션 - 캐싱
        1.탑다운 방식 
            : 한 번 계산한 결과를 메모리 공간에 메모하는 기법
            메모제이션은 다이나믹 프로그래밍에 국한된 개념은 아님
        2. 보텀업
            결과 저장용 리스트는 DP 테이블이라고 부름
            반복분을 통해 구현

다이나믹 프로그래밍 vs 분할정복

둘 다 최적 부분 구조를 가질 때 사용 가능
하지만,
다이나믹 프로그래밍은 부분 문제의 중복
분할정복은 X